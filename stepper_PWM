/*
This script is being developed as part of a custom solution for opening and closing a choke plate during engine cranking.
This script will be implemented on an ATmega 328p (first on arduino and then on a custom PCB). It will use an L293 dual
H-bridge stepper driver. The basic mechanism will be to use timer0 output compare match A and B to toggle two output pins.
Based on which output pin is toggled by which compare match ISR the direction can be changed. The speed of motion will be
controlled by setting the output compare register values (B should always be half of A).
*/

/*  Macro Definitions  */
#define crank_pin   PC0 // pin that should be low normally, high 12V when cranking, and low again when done
#define crank_reg  DDRC // input and output pins intentionally kept on separate registers
#define crank_inp  PINC // pin register to read input pin val
#define crank_stat    0 // bit address in gFlag, low is not cranking

/*  Global Variables  */
volatile uint8_t gFlag = 0x00; // gFlag for state machine

void setup() {
  
  sei(); // enable interrupts
  
  // Cranking pin configure as input
  crank_reg &= ~_BV(crank_pin);
  
  // Configure interrupt for input pin
  PCICR |= _BV(PCIE1);
  PCMSK1 |= _BV(PC0);
  
  // Toggling LED for testing
  DDRB |= _BV(PB5);
  
}

// Interrupt ISR for choke pin

ISR(PCINT1_vect) { // inverted logic because of sense circuit
  if(bit_is_set(crank_inp,crank_pin)) {
    gFlag &= ~_BV(crank_stat);
  } else {
    gFlag |= _BV(crank_stat);
  }
}

void loop() {
  if(bit_is_set(gFlag,crank_stat)) { // if cranking starts
  
    PORTB |= _BV(PB5);
    
    while(bit_is_set(gFlag,crank_stat)) {
      // wait
    }
    
    PORTB &= ~_BV(PB5);
    
  }
}
