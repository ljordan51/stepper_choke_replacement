/*

*/

#define OC0A  PD6
#define OC0B  PD5
#define OCIEB   2
#define OCIEA   1
#define cranking_pin  PB0

void setup() {
  
  sei(); // enable interrupts
  
  // Cranking pin configure as input
  DDRB &= ~_BV(cranking_pin);
  
  // Timer setup
  
  // CTC Mode, 1024 prescaler
  TCCR0A |= _BV(WGM01);
  TCCR0A &= ~_BV(WGM00);
  TCCR0B |= _BV(CS02) | _BV(CS00);
  TCCR0B &= ~_BV(CS01) & ~_BV(WGM02);
  
  // Disable interrupts on output compare matches A and B
  TIMSK0 &= ~_BV(OCIEB) & ~_BV(OCIEA);
  
  // Output compare vals
  OCR0A = 0xFF;
  OCR0B = 0x80;
  
  // Configure output compare pins as inputs until cranking starts
  // These are not driven by the timer output compares and need to be driven in ISRs
  DDRD &= ~_BV(OC0A) & ~_BV(OC0B);
  
}

// Interrupt ISRs for output compare match A and B

ISR(TIMER0_COMPA_vect){
  PORTD ^= _BV(OC0A);
}

ISR(TIMER0_COMPB_vect){
  PORTD ^= _BV(OC0B);
}

void loop() {
  
  if(bit_is_set(PINB,cranking_pin)){
    
    // configure driving pins as outputs
    DDRD |= _BV(OC0A) | _BV(OC0B);
    
    // Enable interrupts on output compare matches A and B
    TIMSK0 |= _BV(OCIEB) | _BV(OCIEA); // start stepper driving
    
    _delay_ms(500); // wait half second for stepper to open choke
    
    // Disable interrupts on output compare matches A and B
    TIMSK0 &= ~_BV(OCIEB) & ~_BV(OCIEA); // stop stepper driving
    
    _delay_ms(5000); // wait preset time until cranking is done?
    
    DDRD &= ~_BV(OC0A) & ~_BV(OC0B); // stop driving pins so stepper doesn't resistance sprung closing of choke?
  }
  
}
